# Routes
# This file defines all application routes (Higher priority routes first)

# Home page - just say app is running
GET  /                                        controllers.index.go

# Map static resources from the /public folder to the /assets URL path
GET  /assets/*file                            controllers.Assets.at(path="/public", file)

# Import Raw Documents of Any Supported Raw Type 
GET  /bulkImportRaw/:dirPath                  controllers.bulkImportRaw.go(dirPath: String)

# Show Article Extract
GET  /showExtract/:articleName                controllers.showExtract.UI(articleName: String, pdb: String ?= "Normalized from July 24 2014 database - Dec 30 - plus Jan tentative addition.csv", runID: Option[Long])

# Generate Semantic Data for Input PDF
GET  /semantic/single/pdf/:inputFileName      controllers.SemanticExtractor.fromArticle(inputFileName: String, pdb: String ?= "Normalized from July 24 2014 database - Dec 30 - plus Jan tentative addition.csv")

# Generate Semantic Data for Input Text File
GET  /semantic/single/txtFile/:inputFileName  controllers.SemanticExtractor.fromTextFile(inputFileName: String, pdb: String ?= "Normalized from July 24 2014 database - Dec 30 - plus Jan tentative addition.csv")

# Purge All Data Other Than PDF Extraction Data 
GET  /purge                                   controllers.SemanticExtractor.purge

# tested / being tested
#########################################################
# not tested or lacking in implementation (or obsolete) 

GET  /showOriginal/:article                   controllers.showOriginal.go(article: String)

GET  /semantic/single/eLife/:inputFileName    controllers.SemanticExtractor.fromElife(inputFileName: String, pdb: String)
GET  /semantic/all/                           controllers.SemanticExtractor.all
GET  /semantic/all/pdf                        controllers.SemanticExtractor.allPdf
GET  /semantic/all/eLife                      controllers.SemanticExtractor.alleLife

GET  /export                                  controllers.SemanticExtractor.export
GET  /export/analytic                         controllers.SemanticExtractor.exportAnalytic

GET  /pdf/convert/all                         controllers.PdfConvert.convertAll
GET  /pdf/convert/single/:location            controllers.PdfConvert.convertSingle(location: String)

# Show admin page - not entirely implemented
GET  /admin/                                  controllers.adminPage.go

# Map the JS resource paths - is this really still relevant?!
# GET  /*file                                 controllers.Assets.versioned(path="/public", file: Asset)

############
# obsolete

# Show article extract
# GET  /showExtractFoundation/:article        controllers.Application.showExtract(runID: String ?= "matan-2015-01-20 00:41:43.448", article: String)
